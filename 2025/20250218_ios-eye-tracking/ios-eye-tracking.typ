#import "@preview/touying:0.5.5": *
#import themes.metropolis: *
#show: metropolis-theme.with(
  aspect-ratio: "16-9",
  footer: utils.display-current-heading(level: 1),
  config-info(
    title: [iOS 18の視線トラッキング],
    author: [宇佐見公輔],
    date: [2025-02-18 / Mobile Act OSAKA 15],
    institution: [株式会社ゆめみ],
    logo: [#image("images/Profile_NFT.jpeg", height: 35%)],
  ),
)
#set text(font: ("0xProto", "IBM Plex Sans JP"), size: 24pt)
#show math.equation: set text(font: "STIX Two Math")
#show raw: set text(font: "0xProto")
#show link: it => underline(text(blue, it))
#title-slide()

== 自己紹介

- 宇佐見公輔（うさみこうすけ）
  - 株式会社ゆめみ iOSテックリード

=== 近況

- 「#link("https://yumemi.notion.site/beba018e485946f696ac72613e1a9a30")[ゆめみ大技林]」
  - 社外の方で執筆に参加してくださる方を募集中
  - 一緒に本を作りませんか？
- ゆめみの「#link("https://yumemi.notion.site/office")[出社原則]」
  - 注意 : 「原則」という語はテクニカルタームで定義がある
  - 僕自身は、堺から京都オフィスまで片道2時間で例外に該当

= iOSの視線トラッキング

== 視線トラッキングとは

#grid(
  columns: 2,
  gutter: 1em,
  [
    - iOSのアクセシビリティ機能
      - iOS 18から搭載
    - 目だけでiPhoneやiPadを操作できる

    #text(
      size: 16pt,
      [
        === 参考
        #link("https://www.apple.com/jp/newsroom/2024/05/apple-announces-new-accessibility-features-including-eye-tracking/")[Apple、視線トラッキングなどの新しいアクセシビリティ機能を発表]
      ],
    )
  ],
  [
    #image("images/apple-newsroom.png")
  ],
)

= モバイルアプリのアクセシビリティ

== 「アクセシビリティ」という言葉の意味

#align(
  center,
  [
    #rect(image("images/usability-accessibility.png"))
  ],
)

== なぜアクセシビリティを考えるのか

- 利用するものがアクセシブルであるかどうかは、障害者や高齢者にとっては生活に直結する重要な問題

ただ、その考え方だと、うっかりすると・・・

- 自分にもいつかはアクセシビリティが重要になるかもしれない
- でも、今の自分には重要ではない

という発想になってしまうかもしれない。

== 医学モデルと社会モデル

障害のとらえかたには、2つのモデルがある。

- 医学モデル
  - 障害は人の身体側にある
- 社会モデル
  - 障害は社会の側にある
  - 社会や環境が対応できていないがゆえに障害が生じている

アクセシビリティを考えるうえでは、社会モデルで考える。

== モバイルアプリは社会の一部

現代は、モバイルコンピューティングの時代。

- モバイルアプリのユーザーは非常に多い
- 利用時間も長く、生活の一部になっている
- 繰り返し継続的に利用する

モバイルアプリは社会モデルにおいて、障害を発生させてしまう側に属している。

アクセシビリティの考慮は、モバイルアプリ開発者の責務。

== 書籍「モバイルアプリアクセシビリティ入門」

#grid(
  columns: 2,
  gutter: 1em,
  [
    - 「アクセシビリティとは」という話から、主なトピックが網羅的に取り上げられている

    #text(
      size: 16pt,
      [
        === 参考
        #link("https://gihyo.jp/book/2024/978-4-297-14602-3")[モバイルアプリアクセシビリティ入門 ──iOS＋Androidのデザインと実装：書籍案内｜技術評論社]
      ],
    )
  ],
  [
    #rect(image("images/978-4-297-14603-0.jpg"))
  ],
)

= 視線トラッキングを試す

== 視線トラッキングでできること

そんなわけで、試しに自分で新機能を使ってみよう。

目だけでできることは何があるか？

- 目でポインタを動かす
  - 視線を向けたところにポインタが移動する
  - 項目にスナップする設定もある
- 目で選択する
  - 滞留コントロール : 注視すると選択になる

== 視線トラッキングを開始する

#grid(
  columns: 2,
  gutter: 1em,
  [
    - 設定「視線トラッキング」をオン
      - ボタンのトリプルクリックでオンオフできるように設定しておくのがおすすめ
    - 指示に従って視線トラッキングを調整する
      - 上部5ヶ所、下部5ヶ所、中央3ヶ所

    #text(
      size: 16pt,
      [
        === 参考
        - #link("https://support.apple.com/ja-jp/guide/iphone/iph66057d0f6/ios")[目の動きでiPhoneを制御する - Apple サポート (日本)]
        - #link("https://support.apple.com/ja-jp/guide/ipad/ipad2cd35723/ipados")[目の動きでiPadを制御する - Apple サポート (日本)]
      ],
    )
  ],
  [
    #image("images/setting.jpeg")
  ],
)

== 視線トラッキングの調整についての注意

- 調整は、設定をオフからオンにするたび毎回始まる
  - オンオフを繰り返す場合には注意
- 再調整は、端末の左上を注視する
  - 慣れないうちは誤って再調整を始めてしまう

== 実際に使ってみると

- ポインタを移動するのがかなり難しい
  - 視線を向けているつもりでも、そこに動かない
  - iPhoneのような小さい画面では、特に難しい
  - iPadのような大きい画面のほうが多少楽
- 滞留コントロールも難しい
  - 意外と視線が外れてしまう
- Apple Vision Proと使用感が全然違う
  - センサーなどのハードウェアの力がやはりすごい

== マウスなどと組み合わせる

目だけの操作にこだわらず、他の機能と組み合わせる。

ポインタコントロール（マウスやトラックパッドなど）との組み合わせは効果的。

- ポインタ移動の補助に
  - うまく動かないときに補助的に使う
- 項目の選択に
  - マウスクリックで選択できる
  - 滞留コントロールに頼るよりも楽になる

== 他のアクセシビリティ機能との組み合わせ

次の機能との組み合わせも効果的。

- Assistive Touch
  - 仮想ボタンを出す機能
  - 視線トラッキングを補助するメニューがある
  - さらに、サウンドアクションも有益
- アシスティブアクセス
  - 画面をシンプルにする機能（らくらくホン）

= 開発時に考慮すること

== プログラムコードからの操作はできない

- アクセシビリティ関連はプライバシーのかたまり
- Appleはプログラムコードからのアクセスを制限している

似たようなことはARKitなどを使うことである程度可能だが、この視線トラッキングからの情報取得はできない。

== UIデザインにおける考慮

アクセシビリティの考慮は、UIデザインとの関連が強い。

しかし実際のところ、視線トラッキングでの操作を、UIデザインで考慮できるだろうか？

通常とは異なる操作方法なので難しいが、できることを考えてみる。

== visionOSを参考にする

visionOSは主に視線で操作する。

そのため、セッションやガイドラインが参考になりそう。

- #link("https://developer.apple.com/jp/videos/play/wwdc2023/10073/")[空間入力のためのデザイン - WWDC23]
- #link("https://developer.apple.com/jp/videos/play/wwdc2023/10076/")[空間ユーザーインターフェイスのためのデザイン - WWDC23]
- #link("https://developer.apple.com/jp/videos/play/wwdc2024/10086/")[優れたvisionOSアプリのデザイン - WWDC24]
- #link("https://developer.apple.com/jp/design/human-interface-guidelines/eyes")[視線 - ヒューマンインターフェースガイドライン]

== 項目の中央に視線を誘導する

#grid(
  columns: 2,
  gutter: 1em,
  [
    視線の移動や注視が難しいことを考慮した注意点がある。

    - 丸い形で中央に視線を誘導
    - 鋭い形は外側に注意が逃げる
    - 外側に縁取りを入れるのも同様によくない
  ],
  grid(
    rows: 2,
    image("images/wwdc_circle.jpeg", height: 50%),
    image("images/wwdc_edge.jpeg", height: 50%)
  ),
)

== ボタンの大きさ・間隔

visionOSは、iOSなどと比べてボタンの大きさや間隔が大きい。

#grid(
  columns: 2,
  gutter: 1em,
  [
    - ボタンのタップ領域は60pt
    - ボタンの表示領域は44pt
    - 表示領域の間隔は16pt

    ポインタが見た目で正確にあっていなくても、タップが可能になっている。
  ],
  image("images/wwdc_buttons.jpeg"),
)

== 視線の誘導

- 一点に集中させる
  - 角丸ボタンなどは有効
- 余白を十分にとる
- 重要なところに視線を集める

視線の誘導として考えた場合、実は、一般的なUIデザインの考え方と共通している。

== 通常のガイドラインも有益

視線トラッキングを考慮せずとも、通常のガイドラインも有益。

- ダークモード対応
  - ライト・ダークから視線を合わせやすいほうを選択
- Dynamic Type対応
  - テキストの大きさも影響がある
  - 大きすぎると注視で視線が外れやすい
    - ユーザーの好みにあわせて変えられるのが大事

= おわりに

== iOS 18の視線トラッキング

- iOS 18からのアクセシビリティ機能
- 一度試してみると面白い
- 単独で使うのは大変なので、他の機能との組み合わせで
- 新たな視点でUIデザインを考えてみるのも良い
